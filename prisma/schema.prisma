generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  image         String?
  email         String?   @unique
  emailVerified DateTime?
  role          UserRole  @default(LOANEE)
  accounts      Account[]
  Loan          Loan[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Investor {
  id          String  @id
  name        String
  business    String
  phone       String
  investment  String
  email       String
  province    String
  eligibility Boolean
}

model Loan {
  id               String     @id
  userId           String
  age              String
  bankruptcy       String
  amount           Int
  purpose          String
  vehicle          String?
  name             Json
  number           String
  dob              DateTime
  marriage         String
  residenceStatus  String
  address          String
  housingStatus    String
  monthlyPayment   String
  employment       String
  income           String
  otherIncome      String
  childBenefit     String
  creditScore      String
  houseExpenditure String
  companyName      String
  position         String
  debt             String
  sin              String?
  payDayLoans      String
  owe              String
  status           LoanStatus @default(PROCESSING)
  emailVerified    Boolean    @default(false)
  tasks            Json[]
  User             User       @relation(fields: [userId], references: [id])
}

model Newsletter {
  id     String   @id
  email  String   @unique
  date   DateTime @default(now())
  active Boolean  @default(true)
}

enum UserRole {
  LOANEE @map("loanee")
  LENDER @map("lender")
  ADMIN  @map("admin")
}

enum LoanStatus {
  PROCESSING  @map("processing")
  REJECTED    @map("rejected")
  PROGRESSING @map("progressing")
  ACCEPTED    @map("accepted")
  ARCHIVED    @map("archived")
  verified
}

enum TaskStatus {
  pending
  completed
  approved
  rejected
}
